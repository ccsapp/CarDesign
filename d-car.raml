#%RAML 1.0

title: D-Car
description: Domain API v2.1 providing static and dynamic car data
version: v2
mediaType: application/json
types:
  Car: !include data_types/entities/car.raml
  TechnicalSpecification: !include data_types/entities/value_objects/technicalSpecification.raml
  DynamicData: !include data_types/entities/value_objects/dynamicData.raml
  LockState:  !include data_types/entities/enumerations/lockState.raml 
  EngineState: !include data_types/entities/enumerations/engineState.raml 
  Vin:  !include data_types/entities/value_objects/vin.raml
  Vins: !include data_types/entities/value_objects/vins.raml  
documentation: 
 - title: Data Definition Table 
   content: !include docs/dtdCar.md

/cars:
  description: All cars maintained by the system
  get:
    description: Get VINs of all cars
    responses:
      200:
        body:
          type: Vins

  /{vin}:
    description: A specific car identified by its VIN
    uriParameters:
      vin:
        type: Vin
    get:
      description: Get all data about a car
      responses:
        200:
          body:
            type: Car
        404:
          body:
            properties:
              message: string
            example:
              message: "No car found for the given VIN"
              
    /technical-specification:
      description: The technical specification of a car
      get:
        description: Get the technical specification of a car
        responses:
          200:
            body:
              type: TechnicalSpecification
              
    /dynamic-data:
      description: The dynamic data of a car
      get:
        description: Get all dynamic data of a car
        responses:
          200:
            body:
              type: DynamicData
              
      /trunk-lock-state:
        description: The trunk lock state of a car
        put:
          description: open trunk of a car
          body: 
            type: LockState
          responses:
            200:
              body:
                type: LockState
            500:
              body:
                properties:
                  message: string
                example:
                  message: "Trunk lock could not be unlocked"
    
      /doors-lock-state:
        description: The doors lock state of a car
        put:
          description: open trunk of a car
          body: 
            type: LockState
          responses:
            200:
              body:
                type: LockState
            500:
              body:
                properties:
                  message: string
                example:
                  message: "Door lock could not be unlocked"

      /engine-state:
        description: The engine state of a car
        put:
          description: open trunk of a car
          body: 
            type: EngineState
          responses:
            200:
              body:
                type: EngineState
            500:
              body:
                properties:
                  message: string
                example:
                  message: "Engine could not be started"